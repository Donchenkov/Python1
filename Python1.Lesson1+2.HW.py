__autor__ = 'Mikhail Donchenkov'

# ================== easy ============================

# Задача-1: поработайте с переменными, создайте несколько,
# выведите на экран, запросите от пользователя и сохраните в переменную, выведите на экран

age = 15
name = 'Tony'
secName = 'Stark'
print('Hello,', name, secName)
num = int(input('Введите число:'))
print(num)

# Задача-2: Запросите от пользователя число, сохраните в переменную,
# прибавьте к числу 2 и выведите результат на экран.
# Если возникла ошибка, прочитайте ее, вспомните урок и постарайтесь устранить ошибку.

inNum = int(input('Введите число:'))
inNum += 2
print(inNum)

# Задача-3: Запросите у пользователя его возраст.
# Если ему есть 18 лет, выведите: "Доступ разрешен",
# иначе "Извините, пользование данным ресурсом только с 18 лет"

userAge = int(input('Введите Ваш возвраст:'))
if userAge >= 18:
    print('Доступ разрешен')
else:
    print('Извините, пользование данным ресурсом только с 18 лет')

# =================== normal =========================

# Задача: используя цикл запрашивайте у пользователя число пока оно не станет больше 0, но меньше 10.
# После того, как пользователь введет корректное число, возведите его в степерь 2 и выведите на экран.
# Например, пользователь вводит число 123, вы сообщаете ему, что число не верное,
# и сообщаете об диапазоне допустимых. И просите ввести заного.
# Допустим пользователь ввел 2, оно подходит, возводим в степень 2, и выводим 4

i = 0
while i < 1:
    whatNum = int(input('Угадайте число: '))
    if 0 < whatNum < 10:
        whatNum **= 2
        print(whatNum)
        break
    else:
        print('число должно быть больше 0, но меньше 10')

# Задача-2: Исходные значения двух переменных запросить у пользователя.
# Поменять значения переменных местами. Вывести новые значения на экран.
# Решите задачу, используя только две переменные.
# Подсказки:
# * постарайтесь сделать решение через действия над числами;

n1 = int(input('Введите первое число:'))
print('Первое число:', n1)
n2 = int(input('Введите второе число:'))
print('Второе число:', n2)

# n1, n2 = n2, n1
n1 = n1 + n2
n2 = n1 - n2
n1 = n1 - n2

print(n1, n2)

# =========================== hard =============================
# Создайте программу медицинская анкета, где вы запросите у пользователя такие данные, как имя, фамилию, возраст, и вес.
# И выведите результат согласно которому пациент в хорошем состоянии, если ему до 30 лет и вес от 50 и до 120 кг,
# Пациенту требуется начать вести правильный образ жизни, если ему более 30 и вес меньше 50 или больше 120 кг
# Пациенту требуется врачебный осмотр, если ему более 40 и вес менее 50 или больше 120 кг.
# Все остальные варианты вы можете обработать на ваш вкус и полет фантазии =)
# Формула не отражает реальной действительности и здесь используется только ради примера.

# Пример: Вася Пупкин, 29 год, вес 90 - хорошее состояние
# Пример: Вася Пупкин, 31 год, вес 121 - следует заняться собой
# Пример: Вася Пупкин, 31 год, вес 49 - следует заняться собой
# Пример: Вася Пупкин, 41 год, вес 121 - следует обратится к врачу!
# Пример: Вася Пупкин, 41 год, вес 49 - следует обратится к врачу!

print('Медицинская анкета')
print('Заполните данные:')

mName = input('Введите свое Имя:')
mSurname = input('Введите свою Фамилию:')
mAge = int(input('Введите свой возраст:'))
mWeight = int(input('Введите свой вес:'))

if mAge < 30 and 50 < mWeight < 120:
    status = 'хорошее состояние'
elif mAge <= 30 and mWeight < 50 or mWeight > 120:
    status = 'следует заняться собой'
elif mAge > 40 and mWeight < 50 or mWeight > 120:
    status = 'следует обратится к врачу!'
else:
    status = 'еще поживете'

print(mName, mSurname + ',', mAge, 'год,', 'вес', mWeight, '-', status)


############################## HW LESSON 2 #################################
# ====================== easy ============================
# Задача-1:
# Дан список фруктов.
# Напишите программу, выводящую фрукты в виде нумерованного списка,
# выровненного по правой стороне.

# Пример:
# Дано: ["яблоко", "банан", "киви", "арбуз"]
# Вывод:
# 1. яблоко
# 2.  банан
# 3.   киви
# 4.  арбуз

# Подсказка: воспользоваться методом .format()
fruits = ['apple', 'banana', 'kiwi', 'watermelon']

for num, frut in enumerate (fruits, start = 1):
    print (str(num) + '. {:>10}'.format(frut))

# Задача-2:
# Даны два произвольные списка.
# Удалите из первого списка элементы, присутствующие во втором списке.
a = [1,2,3,4,5,6,7,8,9]
b = [6,7,8,9]
result = set(a) - set(b)
print(list(result))

# Задача-3:
# Дан произвольный список из целых чисел.
# Получите НОВЫЙ список из элементов исходного, выполнив следующие условия:
# если элемент кратен двум, то разделить его на 4, если не кратен, то умножить на два.
a = [1,2,3,4,5,6,7,8,9]
new_a = []
for number in a:
    if number % 2 == 0:
        new_a.append(number/4)
    else:
        new_a.append (number*2)
print (new_a)


# ====================== normal ============================
# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]
import math
list = [2, -5, 8, 9, -25, 25, 4]
new_list = []
for num in list:
    if num >= 0 and num % math.sqrt(num) == 0:
        new_list.append(int(math.sqrt(num)))
print (new_list)
        
    


# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)


# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random


# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут: 
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]



# ====================== hard ============================
# Задание-1: уравнение прямой вида y = kx + b задано в виде строки.
# Определить координату y точки с заданной координатой x.

# equation = 'y = -12x + 11111140.2121'
# x = 2.5
# вычислите и выведите y


# Задание-2: Дата задана в виде строки формата 'dd.mm.yyyy'.
# Проверить, корректно ли введена дата.
# Условия корректности:
# 1. День должен приводиться к целому числу в диапазоне от 1 до 30(31)
#  (в зависимости от месяца, февраль не учитываем)
# 2. Месяц должен приводиться к целому числу в диапазоне от 1 до 12
# 3. Год должен приводиться к целому положительному числу в диапазоне от 1 до 9999
# 4. Длина исходной строки для частей должна быть в соответствии с форматом 
#  (т.е. 2 символа для дня, 2 - для месяца, 4 - для года)

# Пример корректной даты
# date = '01.11.1985'

# Примеры некорректных дат
# date = '01.22.1001'
# date = '1.12.1001'
# date = '-2.10.3001'


